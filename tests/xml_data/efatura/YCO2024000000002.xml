<Invoice xsi:schemaLocation="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2 UBL-Invoice-2.1.xsd" xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:ccts="urn:un:unece:uncefact:documentation:2" xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:qdt="urn:oasis:names:specification:ubl:schema:xsd:QualifiedDatatypes-2" xmlns:ubltr="urn:oasis:names:specification:ubl:schema:xsd:TurkishCustomizationExtensionComponents" xmlns:udt="urn:un:unece:uncefact:data:specification:UnqualifiedDataTypesSchemaModule:2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ext:UBLExtensions>
    <ext:UBLExtension>
      <ext:ExtensionContent><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#" Id="Signature_YCO2024000000002">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" />
<ds:SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256" />
<ds:Reference Id="Reference-Id-51943cbf-fb06-4c54-8087-aa31a151857a" URI="#Signed-Properties-Id-901a33fa-fff2-4a90-a0e1-54ba3d0fd092" Type="http://uri.etsi.org/01903#SignedProperties">
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256" />
<ds:DigestValue>AVz5J1RNkZ+1LRtCnTZhijppq30/waA6bzS5W8fytlM=</ds:DigestValue>
</ds:Reference>
<ds:Reference Id="Reference-Id-dcadd983-39ff-4346-9bd8-768571e78a4a" URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature" />
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256" />
<ds:DigestValue>s0cZGGErj0a+v2KHHZyqLjOTt/eUU89qlDqKvYp4g8w=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue Id="Signature-Value-Id-68a1fe12-0b4d-456d-a6c9-5d8db774f53c">iBQiszSMpqk2XH0y++NYP007l6bS9pkXbG1vluFN71S6ovbCCKzNnrIk/Mtm0q5tG4NgS0UJTfCdPLilT9nDcR1Fq2Dn7DvBQisnIgcvKOmit/Z0aMOthCBnbzYRH4rz+TiR4n8Dfsk5DqhNkWqt/RpAUmu5jrXJHlWqHlmyOGFuhzEijCZQlnyn3RP09Ab6UMa+NVyjs2EGg+GSh/JRRs7/LSKjTa/bYBAac31wcbaP0OVVO53Cg6v8Akk4obVU+Ru5sgAMgkKT25BsfQIRQCK6Z6v7XYgxzv4nFUfxEgps6fvGqc90zd85QJo10zECIcZETfV7MJJ4eWLbcjpkvA==</ds:SignatureValue>
<ds:KeyInfo>
<ds:X509Data>
<ds:X509Certificate>MIIFrDCCBJSgAwIBAgIIANJG0s8RNlswDQYJKoZIhvcNAQELBQAwXDELMAkGA1UEBhMCVFIxTTBLBgNVBAMMRE1hbGkgTcO8aMO8ciBFbGVrdHJvbmlrIFNlcnRpZmlrYSBIaXptZXQgU2HEn2xhecSxY8Sxc8SxIC0gU8O8csO8bSAyMB4XDTIxMDYxNzEzMzcwN1oXDTI0MDYxNjEzMzcwN1owUzETMBEGA1UEBRMKNjA5MDEyMjA3NDE8MDoGA1UEAwwzTE9HTyBZQVpJTElNIFNBTkFZxLAgVkUgVMSwQ0FSRVQgQU5PTsSwTSDFnsSwUktFVMSwMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvL5z32CQ5sfjxkUMPU6mr1C3OgfyaQ6O1iCU0uCS27lJH4U+QjV6NSXIS95x0kjwRnlnVBUwiudRALAAmW5599j4DxzgI1oBHxOcM0vF/ab5auK0I4VnpyUgj0x4u/mf+Xizyz/M2q6P9eJLCXESnJfId2S5bAMPXA09e4snJhVl7G+XI0XhVwmiQUUUVrFwy/M0QsKq+OjzcQZnPlFcjnaQDHF9gBM0Nd/JdFkYmumK6PoYGlCK61IPLHt83RM41CDQi9EVWtDmUNwsesibFlQ8+bPSmqAcuB4IiuPSu4zpMT60F93lDd/o+GeFnef5SX0D7B2UhbXzN1x+yfugnwIDAQABo4ICeTCCAnUwHwYDVR0jBBgwFoAUA4T6lzHn9IcZL2Ur4bQbY6evdb4wHQYDVR0OBBYEFOmgpcTNmP+NWfwiq4ZieRjC+dlKMA4GA1UdDwEB/wQEAwIHgDCCATMGA1UdIASCASowggEmMIIBIgYLYIYYAQIBAQUHBAEwggERMCoGCCsGAQUFBwIBFh5odHRwOi8vZGVwby5rYW11c20uZ292LnRyL2lsa2UwgeIGCCsGAQUFBwICMIHVHoHSAEIAdQAgAHMAZQByAHQAaQBmAGkAawBhACAAaQBsAGUAIABpAGwAZwBpAGwAaQAgAHMAZQByAHQAaQBmAGkAawBhACAAdQB5AGcAdQBsAGEAbQBhACAAZQBzAGEAcwBsAGEAcgExAG4BMQAgAG8AawB1AG0AYQBrACAAaQDnAGkAbgAgAGIAZQBsAGkAcgB0AGkAbABlAG4AIAB3AGUAYgAgAHMAaQB0AGUAcwBpAG4AaQAgAHoAaQB5AGEAcgBlAHQAIABlAGQAaQBuAGkAegAuMAwGA1UdEwEB/wQCMAAwFgYDVR0lBA8wDQYLYIYYAQIBAQUHMgEwQQYDVR0fBDowODA2oDSgMoYwaHR0cDovL2RlcG8ua2FtdXNtLmdvdi50ci9rdXJ1bXNhbC9tbWVzaHMtczIuY3JsMIGCBggrBgEFBQcBAQR2MHQwPAYIKwYBBQUHMAKGMGh0dHA6Ly9kZXBvLmthbXVzbS5nb3YudHIva3VydW1zYWwvbW1lc2hzLXMyLmNydDA0BggrBgEFBQcwAYYoaHR0cDovL2Npc2R1cG1tczIua3VydW1zYWwua2FtdXNtLmdvdi50cjANBgkqhkiG9w0BAQsFAAOCAQEAPdmSTzrzwreoqju6ceUWOG/iDH1P2MZcQ2KZE9Pb2fiEbQOAtzZoyUnIRFjg4ByNY+zjEPrC/kKcbCGIpXfgIdokSJFLlnMHxNkFCjM2EEmvnU8y/RuAVr9f0tkpe/tG0DxG8ael8vjO1SL8bQlzvngJn+Ra3BvwZpgPOpiqZWpMnE5fbU2WK8961UTLrE3DhSYYmx7zIZvruD+J4zv7x3z1pVyFawCRXTXwd0D3CWkGUPB/X8EIk2utg2lYBur58E4+j9+DTdOrwAwVJA8qwEbzZh/UZTehyr2nmCxPK5tx/tJE6wXXty8yureFd9KaC5w86iYcnMhHbnovFPZatA==</ds:X509Certificate>
</ds:X509Data>
</ds:KeyInfo>
<ds:Object Id="Object-Id-bd24f9b0-9599-4029-8c29-6d51aa07b994"><xades:QualifyingProperties xmlns:xades="http://uri.etsi.org/01903/v1.3.2#" Target="#Signature_YCO2024000000002">
<xades:SignedProperties Id="Signed-Properties-Id-901a33fa-fff2-4a90-a0e1-54ba3d0fd092">
<xades:SignedSignatureProperties>
<xades:SigningTime>2024-02-28T15:19:21.7963995+03:00</xades:SigningTime>
<xades:SigningCertificate>
<xades:Cert>
<xades:CertDigest>
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256" />
<ds:DigestValue>xPTmGH4U7zWoqvOfEvYU25tYKT14hhtmNe4RCPf0QNI=</ds:DigestValue>
</xades:CertDigest>
<xades:IssuerSerial>
<ds:X509IssuerName>CN=Mali Mühür Elektronik Sertifika Hizmet Sağlayıcısı - Sürüm 2,C=TR</ds:X509IssuerName>
<ds:X509SerialNumber>59187616340325979</ds:X509SerialNumber>
</xades:IssuerSerial>
</xades:Cert>
</xades:SigningCertificate>
<xades:SignerRole>
<xades:ClaimedRoles>
<xades:ClaimedRole>Supplier</xades:ClaimedRole>
</xades:ClaimedRoles>
</xades:SignerRole>
</xades:SignedSignatureProperties>
<xades:SignedDataObjectProperties>
<xades:DataObjectFormat ObjectReference="#Reference-Id-dcadd983-39ff-4346-9bd8-768571e78a4a">
<xades:MimeType>text/xml</xades:MimeType>
</xades:DataObjectFormat>
</xades:SignedDataObjectProperties>
</xades:SignedProperties>
</xades:QualifyingProperties>
</ds:Object>
</ds:Signature></ext:ExtensionContent>
    </ext:UBLExtension>
  </ext:UBLExtensions>
  <cbc:UBLVersionID>2.1</cbc:UBLVersionID>
  <cbc:CustomizationID>TR1.2</cbc:CustomizationID>
  <cbc:ProfileID>TEMELFATURA</cbc:ProfileID>
  <cbc:ID>YCO2024000000002</cbc:ID>
  <cbc:CopyIndicator>false</cbc:CopyIndicator>
  <cbc:UUID>3D8ADFE4-A974-421E-BE45-06F156F36288</cbc:UUID>
  <cbc:IssueDate>2024-02-20</cbc:IssueDate>
  <cbc:IssueTime>17:27:13</cbc:IssueTime>
  <cbc:InvoiceTypeCode>IADE</cbc:InvoiceTypeCode>
  <cbc:Note># Yalnız BinDörtYüzOnBeş TL YetmişÜç kuruş #</cbc:Note>
  <cbc:DocumentCurrencyCode listAgencyName="United Nations Economic Commission for Europe" listID="ISO 4217 Alpha" listName="Currency" listVersionID="2001">TRY</cbc:DocumentCurrencyCode>
  <cbc:LineCountNumeric>1</cbc:LineCountNumeric>
  <cac:DespatchDocumentReference>
    <cbc:ID>0000000000000001</cbc:ID>
    <cbc:IssueDate>2024-02-20</cbc:IssueDate>
    <cbc:DocumentDescription>
                    DUZENLENME TARIHI:
                    2024-02-20</cbc:DocumentDescription>
    <cbc:DocumentDescription>
                    DUZENLENME ZAMANI:
                    17:27:13</cbc:DocumentDescription>
    <cac:ValidityPeriod>
      <cbc:StartDate>2024-02-20</cbc:StartDate>
      <cbc:StartTime>17:27:13</cbc:StartTime>
    </cac:ValidityPeriod>
  </cac:DespatchDocumentReference>
  <cac:AdditionalDocumentReference>
    <cbc:ID>BinDörtYüzOnBeş TL YetmişÜç kuruş</cbc:ID>
    <cbc:IssueDate>2024-02-20</cbc:IssueDate>
    <cbc:DocumentType>TOTAL_NET_STR</cbc:DocumentType>
  </cac:AdditionalDocumentReference>
  <cac:AdditionalDocumentReference>
    <cbc:ID>YCO2024000000002</cbc:ID>
    <cbc:IssueDate>2024-02-28</cbc:IssueDate>
    <cbc:DocumentType>XSLT</cbc:DocumentType>
    <cac:Attachment>
      <cbc:EmbeddedDocumentBinaryObject characterSetCode="UTF-8" encodingCode="Base64" filename="YCO2024000000002.xslt" mimeCode="application/xml"></cbc:EmbeddedDocumentBinaryObject>
    </cac:Attachment>
  </cac:AdditionalDocumentReference>
  <cac:Signature>
    <cbc:ID schemeID="VKN_TCKN">6090122074</cbc:ID>
    <cac:SignatoryParty>
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">6090122074</cbc:ID>
      </cac:PartyIdentification>
      <cac:PostalAddress>
        <cbc:CitySubdivisionName />
        <cbc:CityName />
        <cac:Country>
          <cbc:IdentificationCode>TR</cbc:IdentificationCode>
          <cbc:Name>Türkiye</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
    </cac:SignatoryParty>
    <cac:DigitalSignatureAttachment>
      <cac:ExternalReference>
        <cbc:URI>#Signature_YCO2024000000002</cbc:URI>
      </cac:ExternalReference>
    </cac:DigitalSignatureAttachment>
  </cac:Signature>
  <cac:AccountingSupplierParty>
    <cac:Party>
      <cbc:WebsiteURI>-</cbc:WebsiteURI>
      <cac:PartyIdentification>
        <cbc:ID schemeID="TCKN">12496303626</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyIdentification>
        <cbc:ID schemeID="TICARETSICILNO">-</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyIdentification>
        <cbc:ID schemeID="MERSISNO">-</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>YÜCEL OTOMOTİV KAMYON TIR OTO.YEDEK PARÇALARI</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:StreetName>YEŞİLOBA MAH.METAL SAN.SİT. 46127SK. 2 BLOK NO:29/D</cbc:StreetName>
        <cbc:BuildingNumber>-</cbc:BuildingNumber>
        <cbc:CitySubdivisionName>SEYHAN</cbc:CitySubdivisionName>
        <cbc:CityName>ADANA</cbc:CityName>
        <cbc:PostalZone>01140</cbc:PostalZone>
        <cac:Country>
          <cbc:IdentificationCode>TR</cbc:IdentificationCode>
          <cbc:Name>TÜRKİYE</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>BEŞOCAK</cbc:Name>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:Telephone>5334879447</cbc:Telephone>
        <cbc:Telefax>-</cbc:Telefax>
        <cbc:ElectronicMail>caneryucel1971@gmail.com</cbc:ElectronicMail>
      </cac:Contact>
      <cac:Person>
        <cbc:FirstName>HASAN ALİCAN</cbc:FirstName>
        <cbc:FamilyName>YÜCEL</cbc:FamilyName>
      </cac:Person>
    </cac:Party>
  </cac:AccountingSupplierParty>
  <cac:AccountingCustomerParty>
    <cac:Party>
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">0730871159</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>ARDIC OTOMOTİV SANAYİ VE TİCARET A.Ş.</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:StreetName>MALİKÖY BAŞKENT OSB. MAH. BAŞKENT BULVARI NO:95</cbc:StreetName>
        <cbc:CitySubdivisionName>MALİKÖY BAŞKENT OSB , SİNCAN</cbc:CitySubdivisionName>
        <cbc:CityName>ANKARA</cbc:CityName>
        <cbc:PostalZone>06100</cbc:PostalZone>
        <cac:Country>
          <cbc:IdentificationCode>TR</cbc:IdentificationCode>
          <cbc:Name>TÜRKİYE</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name />
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:Telephone />
        <cbc:Telefax />
        <cbc:ElectronicMail>muhasebe@ardicotomotiv.com.tr</cbc:ElectronicMail>
      </cac:Contact>
    </cac:Party>
  </cac:AccountingCustomerParty>
  <cac:TaxTotal>
    <cbc:TaxAmount currencyID="TRY">215.96</cbc:TaxAmount>
    <cac:TaxSubtotal>
      <cbc:TaxableAmount currencyID="TRY">1199.77</cbc:TaxableAmount>
      <cbc:TaxAmount currencyID="TRY">215.96</cbc:TaxAmount>
      <cbc:Percent>18.00</cbc:Percent>
      <cac:TaxCategory>
        <cac:TaxScheme>
          <cbc:Name>KDV</cbc:Name>
          <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
        </cac:TaxScheme>
      </cac:TaxCategory>
    </cac:TaxSubtotal>
  </cac:TaxTotal>
  <cac:LegalMonetaryTotal>
    <cbc:LineExtensionAmount currencyID="TRY">1199.77</cbc:LineExtensionAmount>
    <cbc:TaxExclusiveAmount currencyID="TRY">1199.77</cbc:TaxExclusiveAmount>
    <cbc:TaxInclusiveAmount currencyID="TRY">1415.73</cbc:TaxInclusiveAmount>
    <cbc:AllowanceTotalAmount currencyID="TRY">0.00</cbc:AllowanceTotalAmount>
    <cbc:ChargeTotalAmount currencyID="TRY">0.00</cbc:ChargeTotalAmount>
    <cbc:PayableAmount currencyID="TRY">1415.73</cbc:PayableAmount>
  </cac:LegalMonetaryTotal>
  <cac:InvoiceLine>
    <cbc:ID>1</cbc:ID>
    <cbc:Note />
    <cbc:InvoicedQuantity unitCode="NIU">1</cbc:InvoicedQuantity>
    <cbc:LineExtensionAmount currencyID="TRY">1415.73</cbc:LineExtensionAmount>
    <cac:DespatchLineReference>
      <cbc:LineID>1</cbc:LineID>
      <cac:DocumentReference>
        <cbc:ID>0000000000000001</cbc:ID>
        <cbc:IssueDate>2024-02-20</cbc:IssueDate>
      </cac:DocumentReference>
    </cac:DespatchLineReference>
    <cac:TaxTotal>
      <cbc:TaxAmount currencyID="TRY">215.96</cbc:TaxAmount>
      <cac:TaxSubtotal>
        <cbc:TaxableAmount currencyID="TRY">1199.77</cbc:TaxableAmount>
        <cbc:TaxAmount currencyID="TRY">215.96</cbc:TaxAmount>
        <cbc:Percent>18.00</cbc:Percent>
        <cac:TaxCategory>
          <cac:TaxScheme>
            <cbc:Name>KDV</cbc:Name>
            <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
          </cac:TaxScheme>
        </cac:TaxCategory>
      </cac:TaxSubtotal>
    </cac:TaxTotal>
    <cac:Item>
      <cbc:Description>YAĞ SOĞUTUCU FORD CARGO 2524 3230 ÇELİK</cbc:Description>
      <cbc:Name>359450</cbc:Name>
      <cac:SellersItemIdentification>
        <cbc:ID>359450</cbc:ID>
      </cac:SellersItemIdentification>
    </cac:Item>
    <cac:Price>
      <cbc:PriceAmount currencyID="TRY">1415.7300</cbc:PriceAmount>
    </cac:Price>
  </cac:InvoiceLine>
</Invoice>