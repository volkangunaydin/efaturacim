{"version":1,"defects":{"Efaturacim\\Util\\Tests\\RestApiClientLoginTest::testGetLoginFailureWhenApiReturnsSuccessButInvalidData":3,"Efaturacim\\Util\\Tests\\RestApiClientLoginTest::testGetLoginSuccess":3,"Efaturacim\\Util\\Tests\\RestApiClientLoginTest::testGetLoginFailureWhenApiReturnsError":3,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"numeric value\"":3,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testTestFunction":3,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testRemoveTurkishChars with data set \"lowercase turkish chars\"":3,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testRemoveTurkishChars with data set \"array of turkish strings\"":3,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testEndsWith with data set \"empty needle\"":3,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testTrimNewLines with data set \"trims newlines with empty replacement\"":3,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testTrimNewLines with data set \"trims newlines with dash replacement\"":3,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsValidRef with data set \"non-numeric string\"":3,"Efaturacim\\Util\\Tests\\NumberUtilTest::testCleanNumber with data set \"as string with padding\"":3,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsInt with data set \"non-numeric string\"":3,"Efaturacim\\Util\\Tests\\NumberUtilTest::testFolderPath with data set \"different max size\"":3,"Efaturacim\\Util\\Tests\\NumberUtilTest::testGetAsCleanNumber with data set \"trims trailing zeros\"":3,"Efaturacim\\Util\\Tests\\NumberUtilTest::testGetAsCleanNumber with data set \"trims trailing dot\"":3,"Efaturacim\\Util\\Tests\\SimpleEFaturaTest::testCreateSimpleFatura":4,"Efaturacim\\Util\\Tests\\Utils\\StrNameSurnameTest::testIsEqual":4,"Efaturacim\\Util\\Tests\\Utils\\StrNameSurnameTest::testGetAsString":3,"PriceTest::testConstructorWithNullOptions":3,"PriceTest::testConstructorWithOptions":3,"PriceTest::testSetPropertyFromOptionsPriceAmount":3,"PriceTest::testSetPropertyFromOptionsFiyat":3,"PriceTest::testSetPropertyFromOptionsTutar":3,"PriceTest::testSetPropertyFromOptionsCurrency":3,"PriceTest::testSetPropertyFromOptionsCurrencyID":3,"PriceTest::testSetPropertyFromOptionsParaBirimi":3,"PriceTest::testSetPropertyFromOptionsBaseQuantity":3,"PriceTest::testSetPropertyFromOptionsBirimMiktar":3,"PriceTest::testSetPropertyFromOptionsBaseQuantityUnitCode":3,"PriceTest::testSetPropertyFromOptionsBirimKodu":3,"PriceTest::testSetPropertyFromOptionsNonNumericPriceAmount":3,"PriceTest::testSetPropertyFromOptionsEmptyCurrency":4,"PriceTest::testIsEmptyWhenPriceAmountIsNull":3,"PriceTest::testToDOMElementWhenEmpty":3,"PriceTest::testToDOMElementWithPriceAmountOnly":3,"PriceTest::testToDOMElementWithAllProperties":3,"PriceTest::testNumberFormatting":4,"Warning":6,"Efaturacim\\Util\\Tests\\EfaturaXmlTest::testXmlBRK2025000000052":4},"times":{"Efaturacim\\Util\\Tests\\RestApiClientLoginTest::testGetLoginSuccess":0.001,"Efaturacim\\Util\\Tests\\RestApiClientLoginTest::testGetLoginFailureWhenApiReturnsSuccessButInvalidData":0,"Efaturacim\\Util\\Tests\\RestApiClientLoginTest::testGetLoginFailureWhenApiReturnsError":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testNotEmpty with data set \"non-empty string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testNotEmpty with data set \"string zero\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testNotEmpty with data set \"integer\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testNotEmpty with data set \"float\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testNotEmpty with data set \"boolean true\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testNotEmpty with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testNotEmpty with data set \"null value\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testNotEmpty with data set \"empty array\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testNotEmpty with data set \"non-empty array\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testNotEmpty with data set \"object\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testNotEmpty with data set \"boolean false\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"valid json object\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"valid json array\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"valid json with whitespace\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"invalid json structure\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"plain string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"null value\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"numeric value\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"soft check valid object\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"soft check valid array\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"soft check invalid content\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testIsJson with data set \"soft check plain string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testTestFunction":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testRemoveTurkishChars with data set \"string with turkish chars\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testRemoveTurkishChars with data set \"uppercase turkish chars\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testRemoveTurkishChars with data set \"lowercase turkish chars\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testRemoveTurkishChars with data set \"array of turkish strings\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testRemoveTurkishChars with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testRemoveTurkishChars with data set \"string with no turkish chars\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testToLowerTurkish with data set \"uppercase turkish chars\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testToLowerTurkish with data set \"mixed case string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testToLowerTurkish with data set \"array of strings\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testToLowerTurkish with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testToUpperTurkish with data set \"lowercase turkish chars\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testToUpperTurkish with data set \"mixed case string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testToUpperTurkish with data set \"array of strings\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testToUpperTurkish with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWith with data set \"string starts with string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWith with data set \"string does not start with string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWith with data set \"string starts with one of array\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWith with data set \"string does not start with any of array\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWith with data set \"identical strings\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWith with data set \"needle is longer than haystack\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWith with data set \"empty haystack\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWith with data set \"empty needle\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWith with data set \"null haystack\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testEndsWith with data set \"string ends with string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testEndsWith with data set \"string does not end with string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testEndsWith with data set \"identical strings\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testEndsWith with data set \"needle is longer than haystack\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testEndsWith with data set \"empty haystack\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testEndsWith with data set \"empty needle\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testEndsWith with data set \"null haystack\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWithNumber with data set \"starts with number\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWithNumber with data set \"does not start with number\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWithNumber with data set \"starts with space then number\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testStartsWithNumber with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testTrimNewLines with data set \"trims newlines with empty replacement\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testTrimNewLines with data set \"trims newlines with dash replacement\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testTrimNewLines with data set \"string with no newlines\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testOnlyNumeric with data set \"positive numbers only\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testOnlyNumeric with data set \"can be negative\"":0,"Efaturacim\\Util\\Tests\\SimpleUtilsTest::testOnlyNumeric with data set \"no numbers\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testCoalesce with data set \"first positive value\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testCoalesce with data set \"skips negative value\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testCoalesce with data set \"all null or zero\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testCoalesce with data set \"no arguments\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsValidRef with data set \"positive integer\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsValidRef with data set \"positive integer as string\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsValidRef with data set \"zero\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsValidRef with data set \"null\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsValidRef with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsValidRef with data set \"negative integer\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsValidRef with data set \"non-numeric string\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testCleanNumber with data set \"comma decimal separator\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testCleanNumber with data set \"dot decimal separator\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testCleanNumber with data set \"with spaces\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testCleanNumber with data set \"as string with padding\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testCleanNumber with data set \"high precision\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testGetAsCleanNumber with data set \"trims trailing zeros\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testGetAsCleanNumber with data set \"trims trailing dot\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testGetAsCleanNumber with data set \"no change\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testSmartRead with data set \"european format\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testSmartRead with data set \"us format\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testSmartRead with data set \"invalid string\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testSmartRead with data set \"with precision\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testSmartRead with data set \"null input\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsInt with data set \"integer\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsInt with data set \"integer as string\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsInt with data set \"float with zero decimal\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsInt with data set \"float with small decimal within epsilon\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsInt with data set \"float with decimal outside epsilon\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsInt with data set \"float as string\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsInt with data set \"non-numeric string\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testGetPrecision with data set \"two decimals\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testGetPrecision with data set \"zero decimals\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testGetPrecision with data set \"trailing zeros are ignored\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testGetPrecision with data set \"respects max precision\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testGetPrecision with data set \"string number\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsPositiveNumber with data set \"positive int\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsPositiveNumber with data set \"positive float\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsPositiveNumber with data set \"positive string\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsPositiveNumber with data set \"zero\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsPositiveNumber with data set \"negative int\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsPositiveNumber with data set \"non-numeric\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testIsPositiveNumber with data set \"null\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testNearlyEqual with data set \"equal up to 3 decimals\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testNearlyEqual with data set \"not equal up to 4 decimals\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testNearlyEqual with data set \"equal with different formats\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testNearlyEqual with data set \"exactly equal\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testPad with data set \"pad with zeros\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testPad with data set \"no padding needed\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testPad with data set \"truncate\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testPad with data set \"pad with another char\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testFolderPath with data set \"large index\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testFolderPath with data set \"small index\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testFolderPath with data set \"edge case index\"":0,"Efaturacim\\Util\\Tests\\NumberUtilTest::testFolderPath with data set \"different max size\"":0.003,"Efaturacim\\Util\\Tests\\SimpleEFaturaTest::testCreateSimpleFatura":0.011,"Efaturacim\\Util\\Tests\\Utils\\StrNameSurnameTest::testGetAsResult":0.001,"Efaturacim\\Util\\Tests\\Utils\\StrNameSurnameTest::testIsEqual":0,"Efaturacim\\Util\\Tests\\Utils\\StrNameSurnameTest::testIsEqualNameSurname":0,"Efaturacim\\Util\\Tests\\Utils\\StrNameSurnameTest::testIsEmptyAndIsValid":0,"Efaturacim\\Util\\Tests\\Utils\\StrNameSurnameTest::testGetAsString":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testCoalesce with data set \"first positive value\"":0.003,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testCoalesce with data set \"skips negative value\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testCoalesce with data set \"all null or zero\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testCoalesce with data set \"no arguments\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsValidRef with data set \"positive integer\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsValidRef with data set \"positive integer as string\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsValidRef with data set \"zero\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsValidRef with data set \"null\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsValidRef with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsValidRef with data set \"negative integer\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsValidRef with data set \"non-numeric string\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testCleanNumber with data set \"comma decimal separator\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testCleanNumber with data set \"dot decimal separator\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testCleanNumber with data set \"with spaces\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testCleanNumber with data set \"as string with padding\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testCleanNumber with data set \"high precision\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testGetAsCleanNumber with data set \"trims trailing zeros\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testGetAsCleanNumber with data set \"trims trailing dot\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testGetAsCleanNumber with data set \"no change\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testSmartRead with data set \"european format\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testSmartRead with data set \"us format\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testSmartRead with data set \"invalid string\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testSmartRead with data set \"with precision\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testSmartRead with data set \"null input\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsInt with data set \"integer\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsInt with data set \"integer as string\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsInt with data set \"float with zero decimal\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsInt with data set \"float with small decimal within epsilon\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsInt with data set \"float with decimal outside epsilon\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsInt with data set \"float as string\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsInt with data set \"non-numeric string\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testGetPrecision with data set \"two decimals\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testGetPrecision with data set \"zero decimals\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testGetPrecision with data set \"trailing zeros are ignored\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testGetPrecision with data set \"respects max precision\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testGetPrecision with data set \"string number\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"positive int\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"positive float\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"positive string\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"zero\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"negative int\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"non-numeric\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"null\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testNearlyEqual with data set \"equal up to 3 decimals\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testNearlyEqual with data set \"not equal up to 4 decimals\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testNearlyEqual with data set \"equal with different formats\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testNearlyEqual with data set \"exactly equal\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testPad with data set \"pad with zeros\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testPad with data set \"no padding needed\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testPad with data set \"truncate\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testPad with data set \"pad with another char\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testFolderPath with data set \"large index\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testFolderPath with data set \"small index\"":0,"Efaturacim\\Util\\Tests\\CheckOrderReferenceTest::testFolderPath with data set \"edge case index\"":0,"PriceTest::testConstructorWithNullOptions":0.003,"PriceTest::testConstructorWithOptions":0.001,"PriceTest::testSetPropertyFromOptionsPriceAmount":0.001,"PriceTest::testSetPropertyFromOptionsFiyat":0.001,"PriceTest::testSetPropertyFromOptionsTutar":0,"PriceTest::testSetPropertyFromOptionsCurrency":0,"PriceTest::testSetPropertyFromOptionsCurrencyID":0,"PriceTest::testSetPropertyFromOptionsParaBirimi":0,"PriceTest::testSetPropertyFromOptionsBaseQuantity":0,"PriceTest::testSetPropertyFromOptionsBirimMiktar":0,"PriceTest::testSetPropertyFromOptionsBaseQuantityUnitCode":0,"PriceTest::testSetPropertyFromOptionsBirimKodu":0,"PriceTest::testSetPropertyFromOptionsInvalidProperty":0,"PriceTest::testSetPropertyFromOptionsNonNumericPriceAmount":0,"PriceTest::testSetPropertyFromOptionsEmptyCurrency":0.001,"PriceTest::testIsEmptyWhenPriceAmountIsNull":0,"PriceTest::testIsEmptyWhenPriceAmountIsSet":0,"PriceTest::testToDOMElementWhenEmpty":0.001,"PriceTest::testToDOMElementWithPriceAmountOnly":0.002,"PriceTest::testToDOMElementWithAllProperties":0.001,"PriceTest::testToDOMElementWithBaseQuantityNull":0,"PriceTest::testNumberFormatting":0.001,"Efaturacim\\Util\\Tests\\ReadXMLTest::testExampleXmlToArray":0.001,"Warning":0.041,"Efaturacim\\Util\\Tests\\EfaturaXmlTest::testXmlBRK2025000000052":0.013}}