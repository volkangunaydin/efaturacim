{"version":1,"defects":{"Efaturacim\\Util\\Tests\\FaturaTest\\EirsaliyeXmlTest::testXmlKYI2025000001098":4,"Efaturacim\\Util\\Tests\\UBLTest\\EfaturaXmlTest::testXmlBRK2025000000052":4,"Efaturacim\\Util\\Tests\\UBLTest\\EfaturaXmlTest::testXmlCNK2025000000026":4,"Efaturacim\\Util\\Tests\\UBLTest\\EfaturaXmlTest::testXmlCNK2025000000055":4,"Efaturacim\\Util\\Tests\\UBLTest\\EfaturaXmlTest::testXmlATM2025000001677":4},"times":{"Tests\\EfaturacimServisTest\\ServisTest::testCurlFunctionsAvailable":0.003,"Tests\\EfaturacimServisTest\\ServisTest::testServis":1.823,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testCoalesce with data set \"first positive value\"":0.002,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testCoalesce with data set \"skips negative value\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testCoalesce with data set \"all null or zero\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testCoalesce with data set \"no arguments\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsValidRef with data set \"positive integer\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsValidRef with data set \"positive integer as string\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsValidRef with data set \"zero\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsValidRef with data set \"null\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsValidRef with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsValidRef with data set \"negative integer\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsValidRef with data set \"non-numeric string\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testCleanNumber with data set \"comma decimal separator\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testCleanNumber with data set \"dot decimal separator\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testCleanNumber with data set \"with spaces\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testCleanNumber with data set \"as string with padding\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testCleanNumber with data set \"high precision\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testGetAsCleanNumber with data set \"keeps trailing zeros\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testGetAsCleanNumber with data set \"keeps trailing zeros with dot\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testGetAsCleanNumber with data set \"no change\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testSmartRead with data set \"european format\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testSmartRead with data set \"us format\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testSmartRead with data set \"invalid string\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testSmartRead with data set \"with precision\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testSmartRead with data set \"null input\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsInt with data set \"integer\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsInt with data set \"integer as string\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsInt with data set \"float with zero decimal\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsInt with data set \"float with small decimal within epsilon\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsInt with data set \"float with decimal outside epsilon\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsInt with data set \"float as string\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsInt with data set \"non-numeric string\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testGetPrecision with data set \"two decimals\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testGetPrecision with data set \"zero decimals\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testGetPrecision with data set \"trailing zeros are ignored\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testGetPrecision with data set \"respects max precision\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testGetPrecision with data set \"string number\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"positive int\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"positive float\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"positive string\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"zero\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"negative int\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"non-numeric\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testIsPositiveNumber with data set \"null\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testNearlyEqual with data set \"equal up to 3 decimals\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testNearlyEqual with data set \"not equal up to 4 decimals\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testNearlyEqual with data set \"equal with different formats\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testNearlyEqual with data set \"exactly equal\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testPad with data set \"pad with zeros\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testPad with data set \"no padding needed\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testPad with data set \"truncate\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testPad with data set \"pad with another char\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testFolderPath with data set \"large index\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testFolderPath with data set \"small index\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\CheckOrderReferenceTest::testFolderPath with data set \"edge case index\"":0,"Efaturacim\\Util\\Tests\\FaturaTest\\EirsaliyeXmlTest::testXmlKYI2025000001098":0.002,"Efaturacim\\Util\\Tests\\FaturaTest\\SimpleEFaturaTest::testCreateSimpleFatura":0.012,"Efaturacim\\Util\\Tests\\UBLTest\\EfaturaXmlTest::testXmlBRK2025000000052":0,"Efaturacim\\Util\\Tests\\UBLTest\\EfaturaXmlTest::testXmlCNK2025000000026":0,"Efaturacim\\Util\\Tests\\UBLTest\\EfaturaXmlTest::testXmlCNK2025000000055":0,"Efaturacim\\Util\\Tests\\UBLTest\\EfaturaXmlTest::testXmlATM2025000001677":0,"Efaturacim\\Util\\Tests\\UBLTest\\ReadXMLTest::testExampleXmlToArray":0.001,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testCoalesce with data set \"first positive value\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testCoalesce with data set \"skips negative value\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testCoalesce with data set \"all null or zero\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testCoalesce with data set \"no arguments\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsValidRef with data set \"positive integer\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsValidRef with data set \"positive integer as string\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsValidRef with data set \"zero\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsValidRef with data set \"null\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsValidRef with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsValidRef with data set \"negative integer\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsValidRef with data set \"non-numeric string\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testCleanNumber with data set \"comma decimal separator\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testCleanNumber with data set \"dot decimal separator\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testCleanNumber with data set \"with spaces\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testCleanNumber with data set \"as string with padding\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testCleanNumber with data set \"high precision\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testGetAsCleanNumber with data set \"keeps trailing zeros\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testGetAsCleanNumber with data set \"keeps trailing zeros with dot\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testGetAsCleanNumber with data set \"no change\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testSmartRead with data set \"european format\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testSmartRead with data set \"us format\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testSmartRead with data set \"invalid string\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testSmartRead with data set \"with precision\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testSmartRead with data set \"null input\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsInt with data set \"integer\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsInt with data set \"integer as string\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsInt with data set \"float with zero decimal\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsInt with data set \"float with small decimal within epsilon\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsInt with data set \"float with decimal outside epsilon\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsInt with data set \"float as string\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsInt with data set \"non-numeric string\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testGetPrecision with data set \"two decimals\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testGetPrecision with data set \"zero decimals\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testGetPrecision with data set \"trailing zeros are ignored\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testGetPrecision with data set \"respects max precision\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testGetPrecision with data set \"string number\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsPositiveNumber with data set \"positive int\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsPositiveNumber with data set \"positive float\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsPositiveNumber with data set \"positive string\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsPositiveNumber with data set \"zero\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsPositiveNumber with data set \"negative int\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsPositiveNumber with data set \"non-numeric\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testIsPositiveNumber with data set \"null\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testNearlyEqual with data set \"equal up to 3 decimals\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testNearlyEqual with data set \"not equal up to 4 decimals\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testNearlyEqual with data set \"equal with different formats\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testNearlyEqual with data set \"exactly equal\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testPad with data set \"pad with zeros\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testPad with data set \"no padding needed\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testPad with data set \"truncate\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testPad with data set \"pad with another char\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testFolderPath with data set \"large index\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testFolderPath with data set \"small index\"":0,"Efaturacim\\Util\\Tests\\Utils\\NumberUtilTest::testFolderPath with data set \"edge case index\"":0,"Efaturacim\\Util\\Tests\\Utils\\RestApiClientLoginTest::testGetLoginSuccess":0,"Efaturacim\\Util\\Tests\\Utils\\RestApiClientLoginTest::testGetLoginFailureWhenApiReturnsSuccessButInvalidData":0,"Efaturacim\\Util\\Tests\\Utils\\RestApiClientLoginTest::testGetLoginFailureWhenApiReturnsError":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testNotEmpty with data set \"non-empty string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testNotEmpty with data set \"string zero\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testNotEmpty with data set \"integer\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testNotEmpty with data set \"float\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testNotEmpty with data set \"boolean true\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testNotEmpty with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testNotEmpty with data set \"null value\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testNotEmpty with data set \"empty array\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testNotEmpty with data set \"non-empty array\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testNotEmpty with data set \"object\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testNotEmpty with data set \"boolean false\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testIsJson with data set \"valid json object\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testIsJson with data set \"valid json array\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testIsJson with data set \"valid json with whitespace\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testIsJson with data set \"invalid json structure\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testIsJson with data set \"plain string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testIsJson with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testIsJson with data set \"null value\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testIsJson with data set \"numeric value\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testIsJson with data set \"soft check valid object\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testIsJson with data set \"soft check valid array\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testIsJson with data set \"soft check invalid content\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testIsJson with data set \"soft check plain string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testRemoveTurkishChars with data set \"string with turkish chars\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testRemoveTurkishChars with data set \"uppercase turkish chars\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testRemoveTurkishChars with data set \"lowercase turkish chars\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testRemoveTurkishChars with data set \"array of turkish strings\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testRemoveTurkishChars with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testRemoveTurkishChars with data set \"string with no turkish chars\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testToLowerTurkish with data set \"uppercase turkish chars\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testToLowerTurkish with data set \"mixed case string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testToLowerTurkish with data set \"array of strings\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testToLowerTurkish with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testToUpperTurkish with data set \"lowercase turkish chars\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testToUpperTurkish with data set \"mixed case string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testToUpperTurkish with data set \"array of strings\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testToUpperTurkish with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWith with data set \"string starts with string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWith with data set \"string does not start with string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWith with data set \"string starts with one of array\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWith with data set \"string does not start with any of array\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWith with data set \"identical strings\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWith with data set \"needle is longer than haystack\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWith with data set \"empty haystack\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWith with data set \"empty needle\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWith with data set \"null haystack\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testEndsWith with data set \"string ends with string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testEndsWith with data set \"string does not end with string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testEndsWith with data set \"identical strings\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testEndsWith with data set \"needle is longer than haystack\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testEndsWith with data set \"empty haystack\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testEndsWith with data set \"empty needle\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testEndsWith with data set \"null haystack\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWithNumber with data set \"starts with number\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWithNumber with data set \"does not start with number\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWithNumber with data set \"starts with space then number\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testStartsWithNumber with data set \"empty string\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testTrimNewLines with data set \"trims newlines with empty replacement\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testTrimNewLines with data set \"trims newlines with dash replacement\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testTrimNewLines with data set \"string with no newlines\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testOnlyNumeric with data set \"positive numbers only\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testOnlyNumeric with data set \"can be negative\"":0,"Efaturacim\\Util\\Tests\\Utils\\SimpleUtilsTest::testOnlyNumeric with data set \"no numbers\"":0,"Efaturacim\\Util\\Tests\\Utils\\StrNameSurnameTest::testGetAsResult":0.001,"Efaturacim\\Util\\Tests\\Utils\\StrNameSurnameTest::testIsEqual":0,"Efaturacim\\Util\\Tests\\Utils\\StrNameSurnameTest::testIsEqualNameSurname":0,"Efaturacim\\Util\\Tests\\Utils\\StrNameSurnameTest::testIsEmptyAndIsValid":0,"Efaturacim\\Util\\Tests\\Utils\\StrNameSurnameTest::testGetAsString":0}}